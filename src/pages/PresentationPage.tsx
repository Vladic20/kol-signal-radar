
import React from 'react';
import Layout from '@/components/layout/Layout';
import { PresentationSlide } from '@/components/presentation/PresentationSlide';
import { Button } from '@/components/ui/button';
import { ChevronLeft, ChevronRight } from 'lucide-react';

interface SlideData {
  type: 'image' | 'text';
  src?: string;
  title: string;
  icon?: string;
  content?: string[];
  footer?: string;
}

const PresentationPage = () => {
  const [currentSlide, setCurrentSlide] = React.useState(0);

  const slides: SlideData[] = [
    {
      type: 'image' as const,
      src: '/lovable-uploads/b2df216b-2b9d-4247-99e9-77b4bc081bc8.png',
      title: '–ö–æ–ø–∏—Ç—Ä–µ–π–¥–∏–Ω–≥'
    },
    {
      type: 'image' as const,
      src: '/lovable-uploads/e518731e-1a7f-4288-8ad2-8ca401417d89.png',
      title: '–ü—Ä–æ–±–ª–µ–º–∞'
    },
    {
      type: 'image' as const,
      src: '/lovable-uploads/5145d53b-ec6d-4c1f-86d8-06c554c60e09.png',
      title: '–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è'
    },
    {
      type: 'image' as const,
      src: '/lovable-uploads/353079b5-d0b4-415d-a271-bc1f7d7de5dd.png',
      title: '–ß—Ç–æ —É–∂–µ —Å–¥–µ–ª–∞–Ω–æ'
    },
    {
      type: 'image' as const,
      src: '/lovable-uploads/3a647144-882c-403a-b954-aaeb7e293c1c.png',
      title: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏'
    },
    {
      type: 'text' as const,
      title: 'Social Layer = 100x',
      icon: 'üß¨',
      content: [
        '–õ–∞–π–∫–∏, –∫–æ–º–º–µ–Ω—Ç—ã, —Ñ–æ–ª–ª–æ–≤–∏–Ω–≥ —Ç—Ä–µ–π–¥–µ—Ä–æ–≤.',
        '–ö–∞—Ä—Ç–æ—á–∫–∏ —Ç—Ä–µ–π–¥–æ–≤ —Å –æ–±—Å—É–∂–¥–µ–Ω–∏—è–º–∏.',
        '–†–µ–ø—É—Ç–∞—Ü–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ on-chain –¥–∞–Ω–Ω—ã—Ö –∏ win-rate.',
        '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å "–æ—Ç–≤–µ—á–∞—Ç—å —Å–¥–µ–ª–∫–æ–π" (—Ç–æ—Ä–≥–æ–≤—ã–π –±–∞—Ç—Ç–ª).',
        '–ö–æ–º–º—å—é–Ω–∏—Ç–∏ –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ —Ç–æ—Ä–≥–æ–≤—É—é —Å–æ—Ü—Å–µ—Ç—å —Å –≤–∏—Ä—É—Å–Ω—ã–º —Ä–æ—Å—Ç–æ–º.'
      ]
    },
    {
      type: 'text' as const,
      title: '–î–∞–Ω–Ω—ã–µ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
      icon: 'üìä',
      content: [
        'Win-rate, —Å—Ä–µ–¥–Ω–∏–π PnL, Drawdown, Sharpe ratio.',
        'Dashboard –∫–∞–∂–¥–æ–≥–æ —Ç—Ä–µ–π–¥–µ—Ä–∞.',
        '–ê–ª–≥–æ—Ä–∏—Ç–º—ã –≤—ã–¥–µ–ª—è—é—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤.',
        '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –Ω–µ —É—Å—Ç—É–ø–∞—é—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º —Ç–µ—Ä–º–∏–Ω–∞–ª–∞–º.'
      ]
    },
    {
      type: 'image' as const,
      src: '/lovable-uploads/72278c30-fe14-4831-8cbe-39d775b32ead.png',
      title: '–ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è'
    },
    {
      type: 'image' as const,
      src: '/lovable-uploads/a98b2e54-acfa-44f5-80f2-f18b42022c87.png',
      title: '–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ø—Ä–æ–µ–∫—Ç–∞'
    },
    {
      type: 'image' as const,
      src: '/lovable-uploads/5d82d667-da03-47aa-a82a-16f1a002cc05.png',
      title: 'Roadmap'
    },
    {
      type: 'text' as const,
      title: '–°—Ç—Ä–∞—Ç–µ–≥–∏—è —Ä–æ—Å—Ç–∞',
      icon: 'üöÄ',
      content: [
        '–ë–æ–Ω—É—Å—ã –∑–∞ —Ç—Ä–µ–π–¥—ã –∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤',
        '–°—Ç–∏–º—É–ª—ã –∑–∞ —Ñ–æ–ª–ª–æ–≤–µ—Ä–æ–≤ (Social loop)',
        '–ì–µ–º–∏—Ñ–∏–∫–∞—Ü–∏—è (–±–∏—Ç–≤—ã —Ç—Ä–µ–π–¥–µ—Ä–æ–≤)',
        '–ò–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ KOL\'—ã',
        'Web3-–∫–æ–º–º—å—é–Ω–∏—Ç–∏ –∏ —Ç—Ä–µ–π–¥–µ—Ä DAO'
      ]
    },
    {
      type: 'text' as const,
      title: 'Traction',
      icon: 'üìà',
      content: [
        'MVP –≥–æ—Ç–æ–≤, –ø–µ—Ä–≤—ã–µ 15+ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
        '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –±–∏—Ä–∂–∞–º (Bybit, Binance)',
        '–û—Ç–∑—ã–≤—ã –æ—Ç —Ç—Ä–µ–π–¥–µ—Ä–æ–≤ ‚Äî –≤—ã—Å–æ–∫–∏–π –∏–Ω—Ç–µ—Ä–µ—Å',
        '–ì–æ—Ç–æ–≤—ã –∫ –∑–∞–ø—É—Å–∫—É –∫–æ–ø–∏—Ç—Ä–µ–π–¥–∏–Ω–≥–∞ –≤ –∏—é–ª–µ'
      ]
    },
    {
      type: 'text' as const,
      title: 'Pitch: –∑–∞—á–µ–º –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å',
      icon: 'üí∏',
      content: [
        '–ù–∏—à–∞ –Ω–µ –∑–∞–Ω—è—Ç–∞, —Ö–æ—Ç—è —Å–ø—Ä–æ—Å –æ–≥—Ä–æ–º–µ–Ω',
        'Copytrading + social = –≤–∑—Ä—ã–≤–Ω–æ–π —Ä–æ—Å—Ç',
        '–ú–æ–¥–µ–ª—å –ø—Ä–∏–±—ã–ª–∏ —É–∂–µ —Ä–∞–±–æ—á–∞—è, –¥–∞–∂–µ –±–µ–∑ —Ç–æ–∫–µ–Ω–∞',
        '–ú—ã –Ω–µ —Å—Ç—Ä–æ–∏–º —Ö–∞–π–ø, –º—ã —Å—Ç—Ä–æ–∏–º –ø—Ä–æ–¥—É–∫—Ç'
      ],
      footer: 'üëâ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –Ω–∞ —Ä–∞–Ω–Ω–µ–º —ç—Ç–∞–ø–µ –∏ –∑–∞–π–º–∏—Ç–µ –ª–∏–¥–∏—Ä—É—é—â—É—é –ø–æ–∑–∏—Ü–∏—é –≤ —Ç—Ä–µ–π–¥–∏–Ω–≥-—Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —ç–∫–æ—Å–∏—Å—Ç–µ–º–µ.'
    }
  ];

  const nextSlide = () => {
    setCurrentSlide((prev) => (prev + 1) % slides.length);
  };

  const prevSlide = () => {
    setCurrentSlide((prev) => (prev - 1 + slides.length) % slides.length);
  };

  const goToSlide = (index: number) => {
    setCurrentSlide(index);
  };

  return (
    <Layout>
      <div className="min-h-screen bg-gradient-to-br from-background via-background/95 to-background animate-fade-in">
        <div className="container mx-auto px-4 py-8">
          <h1 className="text-4xl font-bold mb-12 text-center text-gradient">
            –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞
          </h1>
          
          {/* Slide Display - fully integrated into the page */}
          <div className="mb-8">
            <PresentationSlide slide={slides[currentSlide]} />
          </div>
          
          {/* Slide Counter */}
          <div className="text-center mb-8">
            <div className="inline-flex items-center px-4 py-2 glass-effect rounded-full">
              <span className="text-sm text-gray-300 font-medium">
                –°–ª–∞–π–¥ {currentSlide + 1} –∏–∑ {slides.length}
              </span>
            </div>
          </div>
          
          {/* Slide Dots Navigation */}
          <div className="flex justify-center space-x-3 mb-8">
            {slides.map((_, index) => (
              <button
                key={index}
                onClick={() => goToSlide(index)}
                className={`w-4 h-4 rounded-full transition-all duration-300 ${
                  index === currentSlide
                    ? 'bg-gradient-to-r from-neon-purple to-neon-blue scale-110'
                    : 'bg-white/20 hover:bg-white/40 hover:scale-105'
                }`}
                aria-label={`–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–∞–π–¥—É ${index + 1}`}
              />
            ))}
          </div>
          
          {/* Navigation Buttons */}
          <div className="flex justify-between items-center max-w-md mx-auto">
            <Button
              variant="outline"
              onClick={prevSlide}
              disabled={currentSlide === 0}
              className="glass-effect border-white/20 hover:bg-white/10 disabled:opacity-50 disabled:cursor-not-allowed"
            >
              <ChevronLeft className="w-4 h-4 mr-2" />
              –ù–∞–∑–∞–¥
            </Button>
            
            <div className="flex space-x-2">
              <Button
                variant="outline"
                onClick={() => goToSlide(0)}
                className="glass-effect border-white/20 hover:bg-white/10"
              >
                –í –Ω–∞—á–∞–ª–æ
              </Button>
            </div>
            
            <Button
              onClick={nextSlide}
              disabled={currentSlide === slides.length - 1}
              className="bg-gradient-to-r from-neon-purple to-neon-blue hover:opacity-90 disabled:opacity-50 disabled:cursor-not-allowed"
            >
              –î–∞–ª–µ–µ
              <ChevronRight className="w-4 h-4 ml-2" />
            </Button>
          </div>
        </div>
      </div>
    </Layout>
  );
};

export default PresentationPage;
